# yaml-language-server: $schema=https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json

name: multimodal-llm-ai-processing-accelerator
metadata:
  template: multimodal-llm-ai-processing-accelerator@0.0.1
hooks:
  postprovision: 
    # Create all content understanding analyzers defined in the content_understanding_schemas.json file
    posix:
      shell: sh
      # Use azd env get-values to access the Bicep output and (re)create the content understanding analyzers
      run: export CONTENT_UNDERSTANDING_ENDPOINT=$(azd env get-values | grep CONTENT_UNDERSTANDING_ENDPOINT | cut -d'=' -f2 | tr -d '"') && python ./function_app/create_content_understanding_analyzers.py
      interactive: false
      continueOnError: false
      
    windows:
      shell: pwsh
      # Use azd env get-values to access the Bicep output and (re)create the content understanding analyzers
      run: Set-Item env:CONTENT_UNDERSTANDING_ENDPOINT ((azd env get-values | Select-String "CONTENT_UNDERSTANDING_ENDPOINT" | ForEach-Object {$_.ToString().Split('=')[1].Trim('"')})); python ./function_app/create_content_understanding_analyzers.py
      interactive: false
      continueOnError: false
services:
  api:
    project: ./function_app/
    language: python
    host: function
  webapp:
    project: ./demo_app/
    language: py
    host: appservice
    hooks:
      prepackage: 
        # Copy the content_understanding_schemas.json file to the demo_app directory to give it knowledge of the deployed content understanding schemas
        posix:
          shell: sh
          run: cp ../function_app/config/content_understanding_schemas.json ./
          interactive: false
          continueOnError: false
        windows:
          shell: pwsh
          run: copy ../function_app/config/content_understanding_schemas.json ./
          interactive: false
          continueOnError: false
      postpackage: 
        # Remove the content_understanding_schemas.json file from the demo_app directory
        posix:
          shell: sh
          run: rm ./content_understanding_schemas.json
          interactive: false
          continueOnError: false
        windows:
          shell: pwsh
          run: del ./content_understanding_schemas.json
          interactive: false
          continueOnError: false
      postdeploy:
        # Install the required Python packages
        windows:
          shell: pwsh
          run:  python3 -m pip install -r requirements.txt
          interactive: false
          continueOnError: false
        posix:
          shell: sh
          run:  python3 -m pip install -r requirements.txt
          interactive: false
          continueOnError: false